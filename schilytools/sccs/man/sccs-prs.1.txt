sccs-prs(1)			 User Commands			   sccs-prs(1)

NAME
       sccs-prs, prs - display selected portions of an SCCS history

SYNOPSIS
       /usr/ccs/bin/prs [-ael] [-cdate-time] [-ddataspec]
	   [-q[nsedelim]] [-rsid]
	   [-Xextended-options] [-Nbulk-spec] s.filename...


DESCRIPTION
       The prs utility displays part or all of the SCCS file (see sccsfile(4))
       in a user supplied format.

       The output is based on data from the s.files that is first converted
       into a binary format and later converted back into text.


       If a directory name is used in place of the s.filename argument, the
       prs command applies to all s.files in that directory. Unreadable
       s.files produce an error; processing continues with the next file (if
       any). The use of `-' as the s.filename argument indicates that the
       names of files are to be read from the standard input, one s.file per
       line.


OPTIONS
       In the absence of options, prs displays the delta table (version log).
       In the absence of -d, or -l, prs displays the entry for each delta
       indicated by the other options.


       -a	    Includes all deltas, including those marked as removed
		    (see sccs-rmdel(1)).


       -e	    Requests information for all deltas created earlier than,
		    and including, the delta indicated with -r or -c.


       -l	    Requests information for all deltas created later than,
		    and including, the delta indicated with -r or -c.


       -cdate-time  Either options -e or -l must be used with this option.
		    -cdate-time displays information on the deltas checked in
		    either prior to and including the date and time indicated
		    by the date-time argument (option -e); or later than and
		    including the date and time indicated (option -l).
		    date-time takes the form:

		     yy[mm[dd[hh[mm[ss]]]]]

		    Units omitted from the indicated date and time default to
		    their maximum possible values; that is -c7502 is
		    equivalent to -c750228235959.  Any number of non-numeric
		    characters may separate the various 2 digit components.
		    If white-space characters occur, the date-time
		    specification must be quoted. Values of yy in the range
		    69-99 refer to the twentieth century.  Values in the range
		    of 00-68 refer to the twenty-first century.

		    A date-time specification in the form:

		     yyyy/[mm[dd[hh[mm[ss]]]]]

		    refers to a 4-digit year and allows to specify a year
		    outside the range 1969-2068.


       -ddataspec   Produce a report according to the indicated data
		    specification.  dataspec consists of a (quoted) text
		    string that includes embedded data keywords of the form:
		    `:key:' (see Data Keywords, below).	 prs expands these
		    keywords in the output it produces. To specify a TAB
		    character in the output, use \t; to specify a NEWLINE in
		    the output, use \n.


       -rsid	    Specifies the SCCS delta ID (SID) of the delta for which
		    information is desired. If no SID is specified, the most
		    recently created delta is used.


       -q[nsedelim] Enable NSE mode.  If NSE mode is enabled, several NSE
		    related extensions may be used.  In this release, the
		    value of nsedelim is ignored.

		    This option is an undocumented SUN extension that does not
		    exist in historic sccs implementations.



       -Nbulk-spec  Processes a bulk of SCCS history files.  This option
		    allows to do an efficient mass processing of SCCS history
		    files.

		    The bulk-spec parameter is composed from an optional list
		    of flag parameters followed by an optional path specifier.

		    The following flag types are supported:

		    ++	      If bulk-spec is preceded by a `++', prs(1)
			      expects to process filenames that are prepended
			      by a plus sign, the related SID and another plus
			      sign following the form:

				  +sid+filename

			      This permits each file to be retrieved with an
			      individual SID.

		    space     This is a placeholder dummy flag that allows to
			      use a prepared string for the -N option and to
			      replace the space character by one of the
			      supported flags on demand.

		    The following path specifier types are supported:

		    -N	      The file name parameters to the prs command are
			      not s.filename files but the names of the g-
			      files.  The s.filename names are automatically
			      derived from the g-file names by prepending s.
			      to the last path name component.	Both,
			      s.filename and the g-file are in the same
			      directory.

		    -Ns.      The file name parameters to the prs command are
			      s.filename files.	 The the g-files names are
			      automatically derived by removing s.  from the
			      beginning of last path name component of the
			      s.filename.  Both, s.filename and the g-file are
			      in the same directory.

		    -Ndir     The file name parameters to the prs command are
			      not s.filename files but the names of the g-
			      files.  The s.filename names are put into
			      directory dir, the names are automatically
			      derived from the g-file names by prepending
			      dir/s.  to the last path name component.

		    -Ndir/s.  The file name parameters to the prs command are
			      s.filename files in directory dir.  The the g-
			      files names are automatically derived by
			      removing dir/s.  from the beginning of last path
			      name component of the s.filename.

		    A typical value for dir is SCCS.

		    In order to overcome the limited number of exec(2)
		    arguments, it is recommended to use `-' as the file name
		    parameter for prs(1) and to send a list of path names to
		    stdin.

		    This option is a SCHILY extension that does not exist in
		    historic sccs implementations.


       -Xextended-options
		    Specify extended options. The argument extended-options
		    may be a comma separated list of extended option names.

		    The following extended options are supported, they may be
		    abbreviated as long ad the abbreviation is still unique.
		    Options with parameter may not be abbreviated.


		    0	   When reading filenames from stdin, triggered by a
			   file name argument `-', the filename separator is a
			   null byte instead of a newline.  This allows to use
			   long lists with arbitrary filenames.

		    help   Print a short online help for available options.

		    The -X option is a SCHILY extension that does not exist in
		    historic sccs implementations.


       -V
       -version
       --version    Prints the prs version number string and exists.

		    This option is a SCHILY extension that does not exist in
		    historic sccs implementations.


USAGE
       Usage of prs is described below.



   Data Keywords
       Data keywords specify which parts of an SCCS file are to be retrieved.
       All parts of an SCCS file (see sccsfile(4)) have an associated data
       keyword. A data keyword may appear any number of times in a data
       specification argument to -d.  These data keywords are listed in the
       table below:








Keyword	  Data Item		    File       Value				Format**
				    Section*

:A:	  A form of what string:    N/A	       :Z::Y: :M: :I::Z:		S
:AC:	  CMF validation program    F	       text				S
:B:	  branch number		    D	       nnnn				S
:BD:	  body			    B	       text				M
:BF:	  branch flag		    F	       yes or no			S
:CB:	  ceiling boundary	    F	       :R:				S
:C:	  comments for delta	    D	       text				M
:D:	  date delta created	    D	       :Dy:/:Dm:/:Dd:			S
:d:	  date delta created	    D	       :DY:/:Dm:/:Dd:			S
:D_:	  date delta created	    D	       :DY:-:Dm:-:Dd:			S
:Dd:	  day delta created	    D	       nn				S
:Dg:	  deltas ignored (seq #)    D	       :DS: :DS:...			S
:DI:	  seq-no. of deltas	    D	       :Dn:/:Dx:/:Dg:			S
	  included, excluded,
	  ignored
:DL:	  delta line statistics	    D	       :Li:/:Ld:/:Lu:			S
:Dm:	  month delta created	    D	       nn				S
:Dn:	  deltas included (seq #)   D	       :DS: :DS:...			S
:DP:	  predecessor delta	    D	       nnnn				S
	  seq-no.
:Ds:	  default SID		    F	       :I:				S
:DS:	  delta sequence number	    D	       nnnn				S
:Dt:	  delta information	    D	       :DT: :I: :D: :T: :P: :DS: :DP:	S
:DT:	  delta type		    D	       D or R				S
:Dx:	  deltas excluded (seq #)   D	       :DS: ...				S
:Dy:	  year delta created	    D	       nn				S
:DY:	  year delta created	    D	       nnnn				S
:F:	  s.file name		    N/A	       text				S
:G:	  file name		    N/A	       text				S
:FB:	  floor boundary	    F	       :R:				S
:FD:	  file descriptive text	    C	       text				M
:FL:	  flag list		    F	       text				M
:GB:	  gotten body		    B	       text				M
:Gp:	  initial path		    G	       text				S
:Gr:	  unified random	    G	       text				S
:I:	  SCCS delta ID (SID)	    D	       :R:.:L:.:B:.:S:			S
:J:	  joint edit flag	    F	       yes or no			S
:KF:	  keyword error/warning	    F	       yes or no			S
	  flag
:L:	  level number		    D	       nnnn				S
:Ld:	  lines deleted by delta    D	       nnnnn				S
:Li:	  lines inserted by delta   D	       nnnnn				S
:LK:	  locked releases	    F	       :R:...				S
:Lu:	  lines unchanged by	    D	       nnnnn				S
	  delta
:M:	  module name		    F	       text				S
:MC:	  CMF validation flag	    F	       yes or no			S
:MF:	  MR validation flag	    F	       yes or no			S
:MP:	  MR validation program	    F	       text				S
:MR:	  MR numbers for delta	    D	       text				M
:ND:	  null delta flag	    F	       yes or no			S
:Q:	  user defined keyword	    F	       text				S
:P:	  user who created delta    D	       username				S
:PN:	  s.file's pathname	    N/A	       text				S
:R:	  release number	    D	       nnnn				S
:S:	  sequence number	    D	       nnnn				S
:SX:	  SID specific extensions   D	       text				M
:T:	  time delta created	    D	       :Th:::Tm:::Ts:			S
:Th:	  hour delta created	    D	       nn				S
:Tm:	  minutes delta created	    D	       nn				S
:Ts:	  seconds delta created	    D	       nn				S
:UN:	  user names		    U	       text				M
:W:	  A form of what string	    N/A	       :Z::M:\t:I:			S
:Y:	  module type flag	    F	       text				S
:Z:	  what string delimiter	    N/A	       @(#)				S


       *B = body, D = delta table, F = flags, G = gl. metadata, U = user names

       **S = simple format, M = multi-line format



EXAMPLES
       Example 1 Displaying delta entries


       The following command:


	 example% /usr/ccs/bin/prs -e -d":I:\t:P:" program.c


       produces:


	 1.6  username
	 1.5  username
	 ...



ENVIRONMENT VARIABLES
       See environ(5) for descriptions of the following environment variables
       that affect the execution of prs(1): LANG, LC_ALL, LC_COLLATE,
       LC_CTYPE, LC_MESSAGES, and NLSPATH.


       SCCS_NO_HELP
	      If set, prs(1) will not automatically call help(1) with the SCCS
	      error code in order to print a more helpful error message.
	      Scripts that depend on the exact error messages of SCCS commands
	      should set the environment variable SCCS_NO_HELP and set
	      LC_ALL=C.


EXIT STATUS
       The following exit values are returned:


       0    Successful completion.


       1    An error occurred.


FILES
       s.file	      SCCS history file, see sccsfile(4).



       /tmp/pr?????   temporary file


       dump.core      If the file dump.core exists in the current directory
		      and a fatal signal is received, a coredump is initiated
		      via abort(3).


ATTRIBUTES
       See attributes(5) for descriptions of the following attributes:





       +----------------------------+-----------------------------+
       |      ATTRIBUTE TYPE	    |	    ATTRIBUTE VALUE	  |
       +----------------------------+-----------------------------+
       |Availability		    | SUNWsprot			  |
       +----------------------------+-----------------------------+
       |Interface Stability	    | Standard			  |
       +----------------------------+-----------------------------+

SEE ALSO
       sccs(1), sccs-add(1), sccs-admin(1), sccs-branch(1), sccs-cdc(1),
       sccs-check(1), sccs-clean(1), sccs-comb(1), sccs-commit(1),
       sccs-create(1), sccs-cvt(1), sccs-deledit(1), sccs-delget(1),
       sccs-delta(1), sccs-diffs(1), sccs-edit(1), sccs-editor(1),
       sccs-enter(1), sccs-fix(1), sccs-get(1), sccs-help(1),
       sccs-histfile(1), sccs-info(1), sccs-init(1), sccs-istext(1),
       sccs-ldiffs(1), sccs-log(1), sccs-print(1), sccs-prt(1),
       sccs-rcs2sccs(1), sccs-remove(1), sccs-rename(1), sccs-rmdel(1),
       sccs-root(1), sccs-sact(1), sccs-sccsdiff(1), sccs-status(1),
       sccs-tell(1), sccs-unedit(1), sccs-unget(1), sccs-val(1), bdiff(1),
       diff(1), what(1), sccschangeset(4), sccsfile(4), attributes(5),
       environ(5), standards(5).


DIAGNOSTICS
       Use the SCCS help command for explanations (see sccs-help(1)).


AUTHORS
       The SCCS suite was originally written by Marc J. Rochkind at Bell Labs
       in 1972.	 Release 4.0 of SCCS, introducing new versions of the programs
       admin(1), get(1), prt(1), and delta(1) was published on February 18,
       1977; it introduced the new text based SCCS v4 history file format
       (previous SCCS releases used a binary history file format).  The SCCS
       suite was later maintained by various people at AT&T and Sun
       Microsystems.  Since 2006, the SCCS suite is maintained by Joerg
       Schilling.


SOURCE DOWNLOAD
       A frequently updated source code for the SCCS suite is included in the
       schilytools project and may be retrieved from the schilytools project
       at Sourceforge at:

	   http://sourceforge.net/projects/schilytools/

       The download directory is:

	   http://sourceforge.net/projects/schilytools/files/

       Check for the schily-*.tar.bz2 archives.

       Less frequently updated source code for the SCCS suite is at:

	   http://sourceforge.net/projects/sccs/files/

       Separate project informations for the SCCS project may be retrieved
       from:

	   http://sccs.sf.net

SunOS 5.11			  2020/08/05			   sccs-prs(1)
