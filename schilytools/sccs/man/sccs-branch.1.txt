sccs-branch(1)		    Schily's USER COMMANDS		sccs-branch(1)

NAME
       sccs-branch - create a new branch and retrieve a version for editing

SYNOPSIS
       sccs branch [options] [file1 .. filen]

DESCRIPTION
       The branch subcommand creates a new branch and retrieve a version for
       editing.	 Except for creating a new branch, this is equivalent to the
       edit subcommand.

       sccs branch is equivalent to ``get -b -e'' followed by ``delta -s -n''
       followed by ``get -e -t -g''.


OPTIONS
       -asequence
	      Retrieves the version corresponding to the indicated delta
	      sequence number.	This option is used primarily by the SCCS comb
	      command (see sccs-comb(1)).  For users, -r is an easier way to
	      specify a version. The -a option supersedes the -r option when
	      both are used.


       -c date-time

       -cdate-time
	      Retrieves the latest version checked in prior to the date and
	      time indicated by the date-time argument.	 date-time takes the
	      form:


	       yy[mm[dd[ hh[mm[ss]]]]]


	      Units omitted from the indicated date and time default to their
	      maximum possible values; that is -c7502 is equivalent to
	      -c750228235959.  Values of yy in the range 69-99 refer to the
	      twentieth century. Values in the range 00-68 refer to the
	      twenty-first century.  Any number of non-numeric characters may
	      separate the various 2 digit components. If white-space
	      characters occur, the date-time specification must be quoted.

	      A date-time specification in the form:

	       yyyy/[mm[dd[hh[mm[ss]]]]]

	      refers to a 4-digit year and allows to specify a year outside
	      the range 1969-2068.


       -i sid-list

       -isid-list
	      Specifies a list of deltas to include in the retrieved version.
	      The included deltas are noted in the standard output message.
	      sid-list is a comma-separated list of SIDs.  To specify a range
	      of deltas, use a `-' separator instead of a comma, between two
	      SIDs in the list.


       -l     Retrieve a summary of the delta table as l.file.


       -p     Writes the retrieved version to stdout.


       -s     Suppresses all output normally written on the standard output.
	      However, fatal error messages (which always go to the standard
	      error) remain unaffected.


       -r[sid]
	      Retrieves the version corresponding to the indicated SID
	      (delta).

	      The SID for a given delta is a number, in Dewey decimal format,
	      composed of two or four fields: the release and level fields,
	      and for branch deltas, the branch and sequence fields.  For
	      instance, if 1.2 is the SID, 1 is the release, and 2 is the
	      level number.  If 1.2.3.4 is the SID, 3 is the branch and 4 is
	      the sequence number.

	      You need not specify the entire SID to retrieve a version with
	      get.  When you omit -r altogether, or when you omit both release
	      and level, get normally retrieves the highest release and level.
	      If the d flag is set to an SID in the s.file and you omit the
	      SID, get retrieves the default version indicated by that flag.

	      When you specify a release but omit the level, get retrieves the
	      highest level in that release. If that release does not exist,
	      get retrieves highest level from the next-highest existing
	      release.

	      Similarly with branches, if you specify a release, level and
	      branch, get retrieves the highest sequence in that branch.


       -x sid-list

       -x[sid-list]
	      Excludes the indicated deltas from the retrieved version. The
	      excluded deltas are noted in the standard output message.
	      sid-list is a comma-separated list of SIDs.  To specify a range
	      of deltas, use a `-' separator instead of a comma, between two
	      SIDs in the list.



EXAMPLES
       To create a new branch for the file xec.c in the current directory,
       call:

	      sccs branch xec.c

ENVIRONMENT VARIABLES
       See environ(5) for descriptions of the following environment variables
       that affect the execution of sccs-branch(1): LANG, LC_ALL, LC_CTYPE,
       LC_MESSAGES, and NLSPATH.


       SCCS_NO_HELP
	      If set, sccs branch will not automatically call help(1) with the
	      SCCS error code in order to print a more helpful error message.
	      Scripts that depend on the exact error messages of SCCS commands
	      should set the environment variable SCCS_NO_HELP and set
	      LC_ALL=C.

FILES
ATTRIBUTES
       See attributes(5) for descriptions of the following attributes:

       +----------------------------+-----------------------------+
       |      ATTRIBUTE TYPE	    |	    ATTRIBUTE VALUE	  |
       +----------------------------+-----------------------------+
       |Availability		    | SCHILYdeveloper-build-sccs  |
       +----------------------------+-----------------------------+
       |Interface Stability	    | Committed			  |
       +----------------------------+-----------------------------+

SEE ALSO
       sccs(1), sccs-add(1), sccs-admin(1), sccs-cdc(1), sccs-check(1),
       sccs-clean(1), sccs-comb(1), sccs-commit(1), sccs-create(1),
       sccs-cvt(1), sccs-deledit(1), sccs-delget(1), sccs-delta(1),
       sccs-diffs(1), sccs-edit(1), sccs-editor(1), sccs-enter(1),
       sccs-fix(1), sccs-get(1), sccs-help(1), sccs-histfile(1), sccs-info(1),
       sccs-init(1), sccs-istext(1), sccs-ldiffs(1), sccs-log(1),
       sccs-print(1), sccs-prs(1), sccs-prt(1), sccs-rcs2sccs(1),
       sccs-remove(1), sccs-rename(1), sccs-rmdel(1), sccs-root(1),
       sccs-sact(1), sccs-sccsdiff(1), sccs-status(1), sccs-tell(1),
       sccs-unedit(1), sccs-unget(1), sccs-val(1), what(1), sccschangeset(4),
       sccsfile(4).

DIAGNOSTICS
NOTES
BUGS
AUTHOR
       sccs branch was originally written by Eric Allman at UCB in 1980. It
       was later maintained by various people at AT&T and Sun Microsystems.
       Since 2006, it is maintained by Joerg Schilling.


SOURCE DOWNLOAD
       A frequently updated source code for the SCCS suite is included in the
       schilytools project and may be retrieved from the schilytools project
       at Sourceforge at:

	   http://sourceforge.net/projects/schilytools/

       The download directory is:

	   http://sourceforge.net/projects/schilytools/files/

       Check for the schily-*.tar.bz2 archives.

       Less frequently updated source code for the SCCS suite is at:

	   http://sourceforge.net/projects/sccs/files/

       Separate project informations for the SCCS project may be retrieved
       from:

	   http://sccs.sf.net

Joerg Schilling			  2020/07/05			sccs-branch(1)
